# note
# To deploy multiple of these you need to have unique names for
#   - nextcloud-redis-secrets (also in ../ks.yml)
#   - nextcloud-helm-values
#   - HR.metadata.name
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nextcloud-redis-session-ini
data:
  # https://github.com/nextcloud/docker/blob/master/26/fpm-alpine/entrypoint.sh
  redis-session.ini: |
    session.save_handler = redis
    session.save_path = "tcp://$${REDIS_HOST}:$${REDIS_HOST_PORT}?auth=$${REDIS_HOST_PASSWORD}"
    redis.session.locking_enabled = 1
    redis.session.lock_retries = -1
    redis.session.lock_wait_time = 10000
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nextcloud
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 3.5.12
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 0
  upgrade:
    remediation:
      retries: 0
      #cleanupOnFail: true
  #uninstall:
    #keepHistory: false
  # See https://github.com/nextcloud/helm/blob/master/charts/nextcloud/values.yaml
  values:
    fullnameOverride: *app
    podAnnotations:
      reloader.stakater.com/auto: "true"
    image:
      repository: docker.io/library/nextcloud
      tag: 26.0.0-fpm-alpine
      flavor: fpm-alpine
    env:
      PHP_MEMORY_LIMIT: 256M
    nextcloud:
      host: nextcloud.${SECRET_DOMAIN_INTERNAL}
      datadir: /var/www/data
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        runAsNonRoot: true
      extraVolumes:
        - name: nextcloud-php-conf-d
          emptyDir:
        - name: nextcloud-redis-session-ini
          configMap:
            name: nextcloud-redis-session-ini
            items:
              - key: redis-session.ini
                path: redis-session.ini
      extraVolumeMounts:
        #/usr/local/etc/php/conf.d/redis-session.ini
        - mountPath: /usr/local/etc/php/conf.d/redis-session.ini
          name: nextcloud-php-conf-d
          subPath: redis-session.ini
      extraInitContainers:
        - name: redis-session-fixer
          image: docker.io/library/nextcloud:26.0.1-fpm-alpine
          volumeMounts:
            - name: nextcloud-php-conf-d
              mountPath: /output
            - name: nextcloud-redis-session-ini
              mountPath: /input
          env:
            - name: REDIS_HOST
              value: nextcloud-redis-master
            - name: REDIS_HOST_PORT
              value: "6379"
            - name: REDIS_HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: REDIS_HOST_PASSWORD
                  name: nextcloud-redis-secrets
          command:
            - sh
            - -c
            - (apk update && apk add gettext && cat /input/redis-session.ini && env && ls -al /input && ls /output -al && cat /input/redis-session.ini | envsubst > /output/redis-session.ini )
        - name: nfs-fixer
          image: docker.io/library/nextcloud:26.0.1-fpm-alpine
          securityContext:
            runAsUser: 2000
          volumeMounts:
            - name: nextcloud-data
              mountPath: /var/www/data
          command:
            - sh
            - -c
            - (id && ls -al /var/www/data && mount && mkdir -p /var/www/data/data && chmod  0770 /var/www/data && chmod 0770 /var/www/data/data && chgrp 2000 /var/www/data /var/www/data/data && ls -al /var/www/data && touch /var/www/data/data/hello)
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
          default_phone_region = AT
      defaultConfigs:
        smtp.config.php: false
      configs:
        # patched smtp config to use an open smtp relay
        # the helm chart doesn't support this.
        smtp.config.php: |-
          <?php
          $CONFIG = array (
            'mail_smtpmode' => 'smtp',
            'mail_smtphost' => getenv('SMTP_HOST'),
            'mail_smtpport' => getenv('SMTP_PORT') ?: (getenv('SMTP_SECURE') ? 465 : 25),
            'mail_smtpsecure' => getenv('SMTP_SECURE') ?: '',
            'mail_smtpauth' => '',
            'mail_smtpauthtype' => '',
            'mail_smtppassword' => '',
            'mail_smtpname' => '',
            'mail_from_address' => getenv('MAIL_FROM_ADDRESS'),
            'mail_domain' => getenv('MAIL_DOMAIN'),
          );
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' =>
            array(
               0 => '${NET_POD_CIDR}',
            ),
            'forwarded_for_headers' =>
            array (
              0 => 'HTTP_X_FORWARDED_FOR',
            ),
          );
        gitops.config.php: |-
          <?php
          $CONFIG = array (
            'appstoreenabled' => true,
          );
        # Circumvention for client freezes - https://github.com/nextcloud/desktop/issues/5094
        bulkupload.config.php: |-
          <?php
          $CONFIG = array (
            'bulkupload.enabled' => false,
          );
      mail:
        enabled: true
        fromAddress: ${SECRET_SMTP_FROM_USER}
        domain: ${SECRET_DOMAIN_INTERNAL}
        smtp:
          host: ${SMTP_RELAY_HOST}
          port: ${SMTP_RELAY_PORT}
          secure: ""
          authtype: " "

    ingress:
      enabled: true
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: simple-icons:nextcloud
        hajimari.io/info: File and Calendar server
        hajimari.io/group: tools
        nginx.ingress.kubernetes.io/proxy-body-size: 10G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          # Rule borrowed from .htaccess to handle Microsoft DAV clients
          location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
              return 302 /remote.php/webdav/$is_args$args;
            }
          }

          location = /robots.txt {
              allow all;
              log_not_found off;
              access_log off;
          }

          location ^~ /.well-known {

            # The rules in this block are an adaptation of the rules
            # in .htaccess that concern /.well-known.

            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav  { return 301 /remote.php/dav/; }

            location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
            location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

            # Let Nextcloud's API for /.well-known URIs handle all other
            # requests by passing them to the front-end controller.
            return 301 /index.php$request_uri;
          }

          # Rules borrowed from .htaccess to hide certain paths from clients
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }

          # Rule borrowed from .htaccess
          #location /remote {
          #    return 301 /remote.php$request_uri;
          #}

        nginx.ingress.kubernetes.io/enable-global-auth: "false"
      tls:
        - hosts:
            - nextcloud.${SECRET_DOMAIN_INTERNAL}
    nginx:
      enabled: true
      securityContext:
        runAsGroup: 2000
    postgresql:
      enabled: false
    redis:
      enabled: true
      auth:
        enabled: true
        existingSecret: nextcloud-redis-secrets
        existingSecretPasswordKey: REDIS_HOST_PASSWORD
      master:
        persistence:
          enabled: false
      replica:
        persistence:
          enabled: false
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      existingSecret:
        enabled: true
        secretName: database-nextcloud-user
        usernameKey: LOGIN
        passwordKey: PASSWORD
      #host: set in secret
      #user: set in secret
      #password: set in secret
      #database: set in secret
    cronjob:
      enabled: true
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    persistence:
      enabled: true
      existingClaim: nextcloud
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-nfs
        accessMode: ReadWriteMany
    startupProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1

  valuesFrom:
    - kind: Secret
      name: nextcloud-helm-values
      valuesKey: nextcloud.yaml
      optional: false
    - kind: Secret
      name: database-nextcloud-user
      valuesKey: DATABASE_NAME
      targetPath: externalDatabase.database
      optional: false
    - kind: Secret
      name: database-nextcloud-user
      valuesKey: HOST
      targetPath: externalDatabase.host
      optional: false
