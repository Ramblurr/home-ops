---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 3.5.4
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
      interval: 5m
  # See https://github.com/nextcloud/helm/blob/master/charts/nextcloud/values.yaml
  values:
    image:
      repository: docker.io/library/nextcloud
      tag: 26.0.0@sha256:6beacc292c7b5b5036c63000121a309aa34eb14d65cd7f63e81204bae11967b7

    env:
      PHP_MEMORY_LIMIT: 256M

    ingress:
      enabled: true
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: simple-icons:nextcloud
        hajimari.io/info: File and Calendar server
        hajimari.io/group: tools
        nginx.ingress.kubernetes.io/proxy-body-size: 10G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          # Rule borrowed from .htaccess to handle Microsoft DAV clients
          location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
              return 302 /remote.php/webdav/$is_args$args;
            }
          }

          location = /robots.txt {
              allow all;
              log_not_found off;
              access_log off;
          }

          location ^~ /.well-known {

            # The rules in this block are an adaptation of the rules
            # in .htaccess that concern /.well-known.

            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav  { return 301 /remote.php/dav/; }

            location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
            location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

            # Let Nextcloud's API for /.well-known URIs handle all other
            # requests by passing them to the front-end controller.
            return 301 /index.php$request_uri;
          }

          # Rules borrowed from .htaccess to hide certain paths from clients
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }

          # Rule borrowed from .htaccess
          #location /remote {
          #    return 301 /remote.php$request_uri;
          #}

        nginx.ingress.kubernetes.io/enable-global-auth: "false"
      tls:
        - hosts:
            - nextcloud.${SECRET_DOMAIN_INTERNAL}
    postgresql:
      enabled: true
      # postgres creds in secret
    redis:
      enabled: true
      # redis creds in secret
      master:
        persistence:
          enabled: false
      replica:
        persistence:
          enabled: false
    internalDatabase:
      enabled: true
    # externalDatabase:
    #  enabled: true
    #  type: postgresql
    #  database: postgres
    #  #user: set in secret
    #  #password: set in secret
    #  host: nextcloud-db-zalando-postgres-cluster-postgres
    cronjob:
      enabled: true
      failedJobsHistoryLimit: 1
      successfulJobsHistoryLimit: 1

    nextcloud:
      host: nextcloud.${SECRET_DOMAIN_INTERNAL}
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
          default_phone_region = AT
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' =>
            array(
               0 => '${NET_POD_CIDR}',
            ),
            'forwarded_for_headers' =>
            array (
              0 => 'HTTP_X_FORWARDED_FOR',
            ),
          );
        gitops.config.php: |-
          <?php
          $CONFIG = array (
            'appstoreenabled' => true,
            'mail_domain' => '${SECRET_DOMAIN_INTERNAL}',
          );
        # Circumvention for client freezes - https://github.com/nextcloud/desktop/issues/5094
        bulkupload.config.php: |-
          <?php
          $CONFIG = array (
            'bulkupload.enabled' => false,
          );
      mail:
        enabled: true
        fromAddress: ${SECRET_SMTP_FROM}
        domain: ${SECRET_DOMAIN_INTERNAL}
        smtp:
          host: ${SMTP_RELAY_HOST}
          port: ${SMTP_RELAY_PORT}
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    persistence:
      enabled: false
      # existingClaim: nfs-nextcloud

  valuesFrom:
    - kind: Secret
      name: "nextcloud-helm-values"
      valuesKey: nextcloud.yaml
      optional: false
