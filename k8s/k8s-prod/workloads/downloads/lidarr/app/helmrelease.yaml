---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph
      namespace: rook-ceph
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/lidarr-develop
              tag: rolling@sha256:de7dac090ba6250853146dca5e06cc5be3638631c8b2a47843b0a2434f5f0035
            env:
              TZ: "${TIMEZONE}"
              PUSHOVER_DEBUG: "false"
              LIDARR__AUTHENTICATION_METHOD: None
              LIDARR__INSTANCE_NAME: Lidarr
              LIDARR__PORT: &port 8686
              LIDARR__LOG_LEVEL: info
              LIDARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: lidarr-secret
                    key: LIDARR__API_KEY
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 1Gi
        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch

        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 1Gi
              storageClass: "${DEFAULT_STORAGE_CLASS}"
              globalMounts:
                - path: /config
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: nginx-internal
        annotations:
          hajimari.io/icon: mdi:headphones
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      media:
        existingClaim: mali-downloads-media-music-other-nfs
        globalMounts:
          - path: /music-other
      downloads:
        existingClaim: mali-downloads-nfs
        globalMounts:
          - path: /downloads
