---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph
      namespace: rook-ceph
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: lscr.io/linuxserver/lidarr
              tag: latest@sha256:c91490ac2147c21caa2066a1e311b6528b0ade319e73e452a5c4ff616462bf0b
              pullPolicy: IfNotPresent

            probes:
              liveness:
                spec:
                  timeoutSeconds: 2
              readiness:
                spec:
                  timeoutSeconds: 2
              startup:
                spec:
                  timeoutSeconds: 2
            env:
              TZ: "${TIMEZONE}"
              PUID: 2000
              PGID: 2000
            resources:
              requests:
                cpu: 15m
                memory: 0.5G
              limits:
                # cpu: 500m
                memory: 1G
        strategy: Recreate
    service:
      main:
        ports:
          http:
            port: &port 8686
    ingress:
      main:
        enabled: true
        className: nginx-internal
        annotations:
          hajimari.io/icon: mdi:headphones
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: lidarr-config-v1
        globalMounts:
          - path: /config
      media:
        existingClaim: mali-downloads-media-music-other-nfs
        globalMounts:
          - path: /music-other
      downloads:
        existingClaim: mali-downloads-nfs
        globalMounts:
          - path: /downloads
          - path: /custom-services.d
            subPath: lidarr-scripts/custom-services.d
          - path: /custom-cont-init.d
            subPath: lidarr-scripts/custom-cont-init.d
