---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: filebrowser
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph
      namespace: rook-ceph
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: docker.io/filebrowser/filebrowser
              tag: v2.27.0
            env:
              TZ: "${TIMEZONE}"
              FB_DATABASE: /config/filebrowser.db
              FB_ROOT: /data
              FB_LOG: stdout
              FB_NOAUTH: true
              FB_PORT: &port 8080
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                memory: 512Mi
        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: nginx-internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "File Browser"
          hajimari.io/info: "Shared file storage"
          hajimari.io/icon: "file-download"
          hajimari.io/targetBlank: "true"
          nginx.ingress.kubernetes.io/client-body-buffer-size: "10g"
          nginx.ingress.kubernetes.io/proxy-body-size: "10g"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: &host "files.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: "/"
                pathType: "Prefix"
                service:
                  name: main
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        size: 1Gi
        storageClass: "${DEFAULT_STORAGE_CLASS}"
        accessMode: ReadWriteOnce
        globalMounts:
          - path: /config
      media:
        existingClaim: mali-media-nfs
        globalMounts:
          - path: /data/media
      downloads:
        existingClaim: mali-media-downloads-nfs
        globalMounts:
          - path: /data/downloads
      #settings:
      #  enabled: true
      #  globalMounts:
      #    - path: "/config/settings.json"
      #  subPath: ".filebrowser.json"
      #  type: custom
      #  volumeSpec:
      #    configMap:
      #      name: filebrowser-settings
