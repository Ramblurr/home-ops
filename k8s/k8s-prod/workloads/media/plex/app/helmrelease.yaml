---

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugins-gpu
      namespace: kube-system
    - name: rook-ceph
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

      containers:
        main:
          image:
            repository: ghcr.io/onedr0p/plex
            tag: 1.32.6.7557-1cf77d501@sha256:6f87b0811df009af1defc9afad6afa383b9d821a7fcaddc968df41ba445d321e
          env:
            TZ: "${TIMEZONE}"
          resources:
            requests:
              gpu.intel.com/i915: 1
              cpu: 100m
              memory: 2Gi
            limits:
              gpu.intel.com/i915: 1
              memory: 10Gi
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["frigate"]
                  topologyKey: kubernetes.io/hostname
          nodeSelector:
            rmblr.role/worker: "true"
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [2000]
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 25Gi
              storageClass: "${DEFAULT_STORAGE_CLASS}"
              globalMounts:
                - path: /config
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "${SVC_PLEX}"
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: false
        className: nginx-internal
        annotations:
          hajimari.io/icon: simple-icons:plex
          #external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
        hosts:
          - host: &host "plex.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                pathType: Prefix
                service: main
                port: http
        tls:
          - hosts:
              - *host

    persistence:
      transcode:
        type: emptyDir
      media:
        existingClaim: mali-media-nfs
        globalMounts:
          - readOnly: true
            path: /media
        readOnly: true
