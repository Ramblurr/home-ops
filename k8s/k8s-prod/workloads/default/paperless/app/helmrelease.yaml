---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 0
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 0
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 1.17.4
            env:
              PAPERLESS_DBHOST:
                valueFrom:
                  secretKeyRef:
                    name: database-paperless-user
                    key: HOST
              PAPERLESS_DBUSER:
                valueFrom:
                  secretKeyRef:
                    name: database-paperless-user
                    key: LOGIN
              PAPERLESS_DBPASS:
                valueFrom:
                  secretKeyRef:
                    name: database-paperless-user
                    key: PASSWORD
              PAPERLESS_DBNAME:
                valueFrom:
                  secretKeyRef:
                    name: database-paperless-user
                    key: DATABASE_NAME
              PAPERLESS_DBENGINE: postgresql
              PAPERLESS_DBPORT: "5432"
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_CONSUMPTION_DIR: /library/consume
              PAPERLESS_DATA_DIR: /library/data
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_EXPORT_DIR: /library/export
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_REMOTE_USER
              PAPERLESS_MEDIA_ROOT: /library/media
              PAPERLESS_OCR_LANGUAGE: "deu+eng"
              PAPERLESS_PORT: &port 8080
              PAPERLESS_REDIS: redis://localhost:6379
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_TIME_ZONE: Europe/Berlin
              PAPERLESS_FILENAME_FORMAT: "{created_year}/{created_year}-{created_month}-{created_day} {title}"
              PAPERLESS_FILENAME_DATE_ORDER: YMD
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN_INTERNAL}
              USERMAP_UID: 2000
              USERMAP_GID: 2000
            envFrom:
              - secretRef:
                  name: paperless-secret
            resources:
              requests:
                cpu: 100m
                memory: 1000Mi
              limits:
                memory: 5000Mi
          gotenburg:
            image:
              repository: thecodingmachine/gotenberg
              tag: 7.9.2
            env:
              DISABLE_GOOGLE_CHROME: 1
          redis:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 7.2.2
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.0-full
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: nginx-internal
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          hajimari.io/icon: mdi:file-multiple
        hosts:
          - host: &host paperless.${SECRET_DOMAIN_INTERNAL}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      library:
        enabled: true
        existingClaim: paperless-nfs
        advancedMounts:
          main:
            main:
              - path: /library
