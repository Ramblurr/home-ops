---
# This is the mono postgres database for most of my apps
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name app-db
  labels:
    crunchy-userinit.ramblurr.github.com/enabled: "true"
    crunchy-userinit.ramblurr.github.com/superuser: "app-db-root"
spec:
  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: "app-db-root"
  postgresVersion: 16
  dataSource:
    pgbackrest:
      stanza: db
      configuration:
        - secret:
            name: pgo-s3-creds
      global:
        repo1-path: "/app-db/repo1"
        repo1-s3-uri-style: path
      repo:
        name: repo1
        s3:
          bucket: k8s-prod-crunchy-postgres
          endpoint: ${SECRET_S3_ENDPOINT}
          region: us-east-1
  patroni:
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        synchronous_commit: "on"
        pg_hba:
          - hostnossl all all 10.244.0.0/16 md5
          - hostssl all all all md5
  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: pgo-app-db
          egress.home.arpa/apiserver: allow
          egress.home.arpa/minio: allow
          egress.home.arpa/kubedns: allow # FIXME: Remove when clusterNetworkPolicy is in place
      replicas: &replicas 3
      dataVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi # Careful you can increase this, but not decrease it
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: app-db
              postgres-operator.crunchydata.com/data: postgres
  users:
    - name: "app-db-root"
      databases:
        - "postgres"
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    - name: "nextcloud-home"
      databases:
        - "nextcloud-home"
      password:
        type: AlphaNumeric
    - name: "radarr"
      databases:
        - radarr_main
        - radarr_log
      password:
        type: AlphaNumeric
    - name: "sonarr"
      databases:
        - sonarr_main
        - sonarr_log
      password:
        type: AlphaNumeric
    - name: "paperless"
      databases:
        - paperless
      password:
        type: AlphaNumeric
  backups:
    pgbackrest:
      configuration:
        - secret:
            name: pgo-app-db-s3-creds
      global:
        archive-push-queue-max: 4GiB
        archive-timeout: "60"
        compress-type: lz4
        compress-level: "9"
        delta: "y"
        repo1-retention-full: "14"
        repo1-retention-full-type: time
        repo1-path: "/app-db/repo1"
        repo1-s3-uri-style: path
        repo1-bundle: "y"
        repo1-block: "y"
        repo1-retention-diff: "30"
        repo2-bundle: "y"
        repo2-block: "y"
        repo2-path: "/app-db/repo2"
        repo2-s3-uri-style: path
        repo2-retention-full-type: time
        repo2-retention-full: "2"
        repo2-retention-diff: "7"
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: pgo-app-db-backup
          egress.home.arpa/apiserver: allow
          egress.home.arpa/minio: allow
          egress.home.arpa/kubedns: allow # FIXME: Remove when clusterNetworkPolicy is in place
      repos:
        # Minio
        - name: repo1
          schedules:
            full: "0 1 * * 0" # Sunday at 1am
            differential: "0 1 * * 1-6" # Mon-Sat at 1am
            incremental: "0 3-23 * * *" # Every hour except 1-2am
          s3:
            bucket: pg-crunchy-app-db
            endpoint: ${SECRET_S3_ENDPOINT}
            region: us-east-1
        # Cloudflare R2
        - name: repo2
          schedules:
            full: "0 13 * * 3" # Wednesday at 1:00
            differential: "0 13 * * 0-2,4-6" # Sun-Tue + Thu-Sat at 13:00
            incremental: "0 0-12,14-23 * * *" # Every hour except 13:00-14:00
          s3:
            bucket: pg-crunchy-app-db
            endpoint: ${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
            region: us-east-1
  proxy:
    pgBouncer:
      service:
        metadata:
          annotations:
            io.cilium/lb-ipam-ips: ${SVC_APP_DB}
        type: LoadBalancer
      port: 5432
      replicas: *replicas
      config:
        global:
          # Grafana requires session
          # Ref: https://github.com/grafana/grafana/issues/74260
          pool_mode: transaction
          client_tls_sslmode: prefer
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: pgbouncer
