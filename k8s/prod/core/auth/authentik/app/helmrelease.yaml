---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.2.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
      #chart: ./charts/authentik
      #sourceRef:
      #  kind: GitRepository
      #  name: authentik-main
      #  namespace: flux-system
  values:
    authentik:
      log_level: info
      email:
        port: 25
        use_tls: false
      error_reporting:
        enabled: false
        send_pii: false
      redis:
        host: "authentik-redis.auth.svc.cluster.local"
        password: ""
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: auto
      envFrom:
        - secretRef:
            name: authentik-secret
      env:
        - name: AUTHENTIK_POSTGRESQL__HOST
          valueFrom:
            secretKeyRef:
              name: "${APP}-db-pguser-${DB_USER}"
              key: host
        - name: AUTHENTIK_POSTGRESQL__NAME
          valueFrom:
            secretKeyRef:
              name: "${APP}-db-pguser-${DB_USER}"
              key: dbname
        - name: AUTHENTIK_POSTGRESQL__USER
          valueFrom:
            secretKeyRef:
              name: "${APP}-db-pguser-${DB_USER}"
              key: user
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: "${APP}-db-pguser-${DB_USER}"
              key: password
      volumes:
        - name: custom-css
          configMap:
            name: authentik-custom-css
      volumeMounts:
        - name: custom-css
          mountPath: /web/dist/custom.css
          subPath: custom.css
    server:
      metrics:
        serviceMonitor:
          enabled: true
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - &host "auth.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host

    postgresql:
      enabled: false

    prometheus:
      rules:
        enabled: true

    redis:
      enabled: false
