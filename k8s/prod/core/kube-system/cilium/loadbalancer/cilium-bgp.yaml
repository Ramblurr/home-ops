---
# https://docs.cilium.io/en/latest/network/bgp-control-plane/
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPPeeringPolicy
# comments courtesy of JJGadgets
# MAKE SURE CRDs ARE INSTALLED IN CLUSTER VIA cilium-config ConfigMap OR Cilium HelmRelease/values.yaml (bgpControlPlane.enabled: true), BEFORE THIS IS APPLIED!
# "CiliumBGPPeeringPolicy" Custom Resource will replace the old MetalLB BGP's "bgp-config" ConfigMap
# "CiliumBGPPeeringPolicy" is used with `bgpControlPlane.enabled: true` which uses GoBGP, NOT the old `bgp.enabled: true` which uses MetalLB
metadata:
  name: bgp-loadbalancer-ip-main
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/os: linux
  virtualRouters:
    - localASN: 64512
      exportPodCIDR: false
      serviceSelector: # this replaces address-pools, instead of defining the range of IPs that can be assigned to LoadBalancer services, now services have to match below selectors for their LB IPs to be announced
        matchExpressions:
          - key: fakeSelector
            operator: NotIn
            values: ["will-match-and-announce-all-services"]
      neighbors:
        - peerAddress: "${CILIUM_BGP_PEER}/32" # unlike bgp-config ConfigMap, peerAddress needs to be in CIDR notation
          peerASN: 64512
---
apiVersion: cilium.io/v2alpha1
kind: CiliumLoadBalancerIPPool
metadata:
  name: main-pool
spec:
  cidrs:
    - cidr: "${CILIUM_BGP_LB_CIDR}"
      serviceSelector:
        matchExpressions:
          - { key: expose.to.primary.vlan, operator: NotIn, values: ["yes"] }
---
# https://docs.cilium.io/en/latest/network/l2-announcements
apiVersion: cilium.io/v2alpha1
kind: CiliumL2AnnouncementPolicy
metadata:
  name: prim-vlan-l2-policy
spec:
  loadBalancerIPs: true
  externalIPs: true
  interfaces:
    - brprim4
  serviceSelector:
    matchLabels:
      expose.to.primary.vlan: "yes"
  nodeSelector:
    matchLabels:
      kubernetes.io/os: linux
---
apiVersion: cilium.io/v2alpha1
kind: CiliumLoadBalancerIPPool
metadata:
  name: roon-vlan-pool
  namespace: kube-system
spec:
  allowFirstLastIPs: "Yes"
  cidrs:
    - cidr: "10.9.6.23/32"
  serviceSelector:
    matchLabels:
      expose.to.primary.vlan: "yes"
