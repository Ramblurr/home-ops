---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: calibre-web
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/bjw-s/calibre-web
              tag: 0.6.21@sha256:9aef000820ef1b25705f7c573e285f03b79a50777d95f90748029ceb853f7cf0
            env:
              TZ: "${TIMEZONE}"
              CACHE_DIR: /cache
            resources:
              requests:
                cpu: 15m
                memory: 500Mi

        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]

    service:
      main:
        ports:
          http:
            port: 8083
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/proxy-body-size: 1000M
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-external.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host books.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
      internal:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 1000M
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-internal.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host books.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
      kobo:
        enabled: true
        className: internal
        annotations:
          #external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/proxy-buffering: "on"
          nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
          nginx.ingress.kubernetes.io/proxy-buffer-size: "256k"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_busy_buffers_size 256k;
        hosts:
          - host: &host_kobo books-kobo.${SECRET_DOMAIN}
            paths:
              - path: /kobo/
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host_kobo

    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /config
      media:
        enabled: true
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: /mnt/tank2/media/books
        globalMounts:
          - path: /data/media
      cache:
        type: emptyDir
        globalMounts:
          - path: /cache
