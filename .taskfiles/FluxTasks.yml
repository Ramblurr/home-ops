---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  # renovate: datasource=github-releases depName=prometheus-operator/prometheus-operator
  PROMETHEUS_OPERATOR_VERSION: v0.71.2
  CLUSTER_SECRET_SOPS_FILE: "{{.CLUSTER_DIR}}/flux/vars/cluster-secrets.sops.yaml"
  CLUSTER_SETTINGS_FILE: "{{.CLUSTER_DIR}}/flux/vars/cluster-settings.yaml"

tasks:
  bootstrap:
    desc: Bootstrap Flux into a Kubernetes cluster
    cmds:
      - kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{.PROMETHEUS_OPERATOR_VERSION}}/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
      - kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{.PROMETHEUS_OPERATOR_VERSION}}/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
      - kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{.PROMETHEUS_OPERATOR_VERSION}}/example/prometheus-operator-crd/monitoring.coreos.com_scrapeconfigs.yaml
      - kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --filename https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{.PROMETHEUS_OPERATOR_VERSION}}/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
      - kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --kustomize {{.CLUSTER_DIR}}/bootstrap
      - cat {{.AGE_FILE}} | kubectl -n flux-system create secret generic sops-age --from-file=age.agekey=/dev/stdin
      - sops --decrypt {{.CLUSTER_SECRET_SOPS_FILE}} | kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --filename -
      - kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --filename {{.CLUSTER_SETTINGS_FILE}}
      - kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --kustomize {{.CLUSTER_DIR}}/flux/config
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBECONFIG_FILE}}" }
      - { msg: "Missing Sops Age key file", sh: "test -f {{.AGE_FILE}}" }

  gr-sync:
    desc: Sync main Flux GitRepository
    cmds:
      - flux reconcile source git home-kubernetes

  gr-sync-all:
    desc: Sync all Flux GitRepositories
    cmds:
      - |
        kubectl get gitrepositories --all-namespaces --no-headers | awk '{print $1, $2}' \
          | xargs -P 4 -L 1 bash -c \
            'kubectl -n $0 annotate gitrepository/$1 reconcile.fluxcd.io/requestedAt=$(date +%s) --field-manager=flux-client-side-apply --overwrite'

  ks-sync:
    desc: Sync all Flux Kustomizations
    cmds:
      - |
        kubectl get kustomization --all-namespaces --no-headers | awk '{print $1, $2}' \
          | xargs -P 4 -L 1 bash -c \
            'kubectl -n $0 annotate kustomization/$1 reconcile.fluxcd.io/requestedAt="$(date +%s)" --field-manager=flux-client-side-apply --overwrite'

  hr-sync:
    desc: Sync all Flux HelmReleases
    cmds:
      - |
        kubectl get helmreleases --all-namespaces --no-headers | awk '{print $1, $2}' \
          | xargs -P 4 -L 1 bash -c \
            'kubectl -n $0 annotate helmrelease/$1 reconcile.fluxcd.io/requestedAt="$(date +%s)" --overwrite'

  tf-sync:
    desc: Sync Flux Terraforms
    cmds:
      - |
        kubectl get terraforms --all-namespaces --no-headers | awk '{print $1, $2}' \
          | xargs -P 4 -L 1 bash -c \
            'kubectl -n $0 annotate terraform/$1 reconcile.fluxcd.io/requestedAt="$(date +%s)" --overwrite'
  hr-suspend:
    desc: Suspend all Flux HelmReleases
    cmds:
      - |
        flux get helmrelease --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -L 1 bash -c 'flux -n $0 suspend helmrelease $1'
  hr-resume:
    desc: Resume all Flux HelmReleases
    cmds:
      - |
        flux get helmrelease --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -L 1 bash -c 'flux -n $0 resume helmrelease $1'

  hr-toggle:
    desc: Suspend and then resume a HelmRelease pass ns= and hr=
    cmds:
      - |
        flux suspend hr -n {{.ns}} {{.hr}}
        sleep 1
        flux resume hr -n {{.ns}} {{.hr}}
