---
- name: pod info
  containers.podman.podman_pod_info:
    name: "{{ container_name }}"
  register: pod_info

- debug:
    var: pod_info

- ansible.builtin.set_fact:
    pod_exists: "{{ (pod_info.pods | length) > 0 and (pod_info.pods[0] | length) > 0 }}"

- debug:
    var: pod_exists


- name: Get service facts
  ansible.builtin.service_facts:

- name: systemd pod stop
  when: container_recreate and pod_exists and pod_service_name in services
  ansible.builtin.systemd:
    name: pod-{{ container_name }}.service
    state: stopped
    enabled: false
    daemon_reload: true
  retries: 3
  delay: 3
  register: result
  until: result.status.SubState == "dead"

- name: pod info
  containers.podman.podman_pod_info:
    name: "{{ container_name }}"
  register: pod_info

- debug:
    var: pod_info

- debug:
    msg: "{{ (pod_info.pods | length) > 0 and (pod_info.pods[0] | length) > 0 }}"

- ansible.builtin.set_fact:
    pod_exists: "{{ (pod_info.pods | length) > 0 and (pod_info.pods[0] | length) > 0 }}"

- debug:
    var: pod_exists

- name: stop pod
  when: container_recreate and pod_exists
  containers.podman.podman_pod:
    name: "{{ container_name }}"
    state: stopped
  retries: 3
  delay: 3
  register: result
  until: result.pod is not defined or result.pod.State != "running"

- name: remove pod
  when: container_recreate or container_remove
  containers.podman.podman_pod:
    name: "{{ container_name }}"
    state: absent
