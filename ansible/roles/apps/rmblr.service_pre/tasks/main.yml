---
- set_fact:
    pod_service_name: "pod-{{ container_name }}.service"
  when: container_pod is defined

- name: set create user flag false
  set_fact:
    should_create_container_user: false
  when: container_vol_user in ['root', 'nobody'] or container_vol_uid in [65534, 0]

- name: set create user flag true
  set_fact:
    should_create_container_user: true
  when: container_vol_user not in ['root', 'nobody'] or container_vol_uid not in [65534, 0]

- name: set container_volumes_state
  set_fact:
    container_volumes_state: absent
  when: container_down | bool

- name: set container_state
  set_fact:
    container_state: stopped
  when: container_down | bool

- name: set container_remove
  set_fact:
    container_remove: true
  when: container_down | bool

- name: set DNS Record
  when: not container_remove and container_expose_public and service_fqdn is defined and service_fqdn != ""
  community.general.cloudflare_dns:
    api_token: "{{ cloudflare_dns_edit_token }}"
    zone: "{{ cloudflare_zone_name }}"
    state: "{{ container_expose_public |ternary('present', 'absent') }}"
    solo: "{{ container_expose_public }}"
    proxied: true
    type: A
    value: "{{ cloudflare_public_ip }}"
    record: "{{ service_fqdn }}"

- name: remove DNS Record
  when: container_remove and container_expose_public
  community.general.cloudflare_dns:
    api_token: "{{ cloudflare_dns_edit_token }}"
    zone: "{{ cloudflare_zone_name }}"
    type: A
    value: "{{ cloudflare_public_ip }}"
    record: "{{ service_fqdn }}"
    state: absent

- name: create user
  when: should_create_container_user
  ansible.builtin.user:
    name: "{{ container_vol_user }}"
    uid: "{{ container_vol_uid }}"
    shell: /usr/bin/false
    home: "{{ service_base_dir }}"

- name: ensure dirs
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ container_vol_user }}"
    group: "{{ container_vol_user }}"
    mode: 0760
    state: directory
  loop: "{{ service_dirs }}"

- ansible.builtin.include_tasks: container-stop.yml
  when: container_pod is not defined

- ansible.builtin.include_tasks: pod-stop.yml
  when: container_pod is defined

#- name: create nfs volume
#  when: container_nfs_volume_name is defined and container_nfs_volume_name
#  containers.podman.podman_volume:
#    state: "{{ container_volumes_state }}"
#    recreate: "{{ container_volumes_recreate }}"
#    name: "{{ container_nfs_volume_name }}"
#    options:
#      - "type=nfs"
#      - "device={{ nfs_host }}:{{ container_nfs_remote_path }}"
#      - "{{ container_nfs_mount_opts }}"

- name: set host cifs and nfs mount path
  set_fact:
    host_nfs_path: "/mnt/{{ container_name }}"
    host_cifs_path: "/mnt/{{ container_name }}"

- name: install cifs-utils
  when: container_cifs_enabled
  package:
    name: cifs-utils
    state: present

- name: create cifs volume mount
  when: container_cifs_enabled
  include_role:
    name: systemd-mounts
  vars:
    systemd_mounts:
      - where: "{{ host_cifs_path }}"
        what: "//{{ cifs_host }}/{{ container_cifs_remote_path }}"
        type: cifs
        options: "{{ container_cifs_mount_opts }}"
        owner: "{{ container_vol_user }}"
        group: "{{ container_vol_user }}"
        state: "{{ (container_state == 'started') | ternary('started', 'absent') }}"
