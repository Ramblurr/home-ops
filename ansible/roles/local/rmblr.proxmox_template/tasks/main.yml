---
- name: check template already prepared
  shell: >
    qm config {{ prox_cloudimg_template_id }} | awk '/template: / { print $2 }' | grep 1
  failed_when: false
  changed_when: false
  register: prox_template_prepared

- name: check template created, but not prepared
  command: qm config {{ prox_cloudimg_template_id }}
  failed_when: false
  changed_when: false
  register: prox_template_exists

- name: create template
  when: prox_template_prepared.rc != 0 or prox_template_recreate | default(false)
  block:
    - name: show templating results
      debug:
        msg: "{{ lookup('template', 'template-user-config.yml') }}"

    - pause:
        prompt: looks good?

    - name: Download cloudimg
      get_url:
        url: "{{ prox_cloudimg_url }}"
        dest: "{{ prox_images_dir }}/{{ prox_cloudimg_file }}"
        checksum: "{{ prox_cloudimg_checksum }}"
        mode: 0600

    - name: Destroy unprepared template vm
      shell: >
        qm stop {{ prox_cloudimg_template_id }} --timeout 120
        && qm destroy {{ prox_cloudimg_template_id }} --purge
      when: prox_template_exists.rc == 0 or prox_template_recreate | default(false)

    - pause:
        seconds: 3

    - name: Create template vm
      command: >
        qm create {{ prox_cloudimg_template_id }}
        --name {{ prox_cloudimg_name }}
        --description "Cloud image template {{ prox_cloudimg_name }}"
        --memory 1024
        --agent 1
        --net0 {{ prox_cloudimg_template_net_opts }}
        {{ prox_cloudimg_create_extra_opts |default ('') }}

    - pause:
        seconds: 5

    - name: Import template image
      command: >
        qm importdisk {{ prox_cloudimg_template_id }}
        {{ prox_images_dir }}/{{ prox_cloudimg_file }}
        {{ prox_image_storage }}

    - name: Configuring template hardware
      command: >
        qm set {{ prox_cloudimg_template_id }}

        --scsihw virtio-scsi-pci
        --scsi0 {{ prox_image_storage }}:vm-{{ prox_cloudimg_template_id }}-disk-0
        --ide2 {{ prox_image_storage }}:cloudinit
        --boot c
        --bootdisk scsi0
        --serial0 socket
        --vga serial0

    - name: Copy cloud init config
      template:
        src: template-user-config.yml.j2
        dest: "{{ prox_snippets_dir}}/template-user-config.yml"

    - name: Adding a custom cloud init configuration
      command: >
        qm set {{ prox_cloudimg_template_id }}
        --cicustom "user={{ prox_snippets_storage }}:snippets/template-user-config.yml"
        --ipconfig0 "ip={{ prox_ipconfig0 | default('10.9.8.22/23,gw=10.9.8.1') }}"
        --sshkey {{ prox_snippets_dir }}/casey.pub

    - name: Resizing the template's disk
      command: qm resize {{ prox_cloudimg_template_id }} scsi0 {{ prox_cloudimg_template_disk_size }}

    - name: Powering on the VM
      command: qm start {{ prox_cloudimg_template_id }}

- name: template is ready
  set_fact:
    proxmox_template_ready: true
  when: prox_template_prepared.rc == 0 and not prox_template_recreate | default(false)
